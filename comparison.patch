diff --git a/benchmarks/comparison/map2/CMakeLists.txt b/benchmarks/comparison/map2/CMakeLists.txt
index 00b03030..522777c8 100644
--- a/benchmarks/comparison/map2/CMakeLists.txt
+++ b/benchmarks/comparison/map2/CMakeLists.txt
@@ -15,18 +15,18 @@ set(CGOGN1_PATH "" CACHE PATH "Path to CGoGN.")
 set(CGOGN1_INCLUDE_DIRS "")
 set(CGOGN1_LIBRARIES "")
 if (CGOGN1_PATH)
-	set(CGOGN1_INCLUDE_DIRS ${CGOGN1_PATH}/CGoGN/include ${CGOGN1_PATH}/ThirdParty ${CGOGN1_PATH}/ThirdParty/TinyXml2)
-	list(APPEND CPP_FILES cgogn1/cgogn1_performance.cpp)
-	list(APPEND HEADER_FILES cgogn1/cgogn1_performance.h)
-	find_library(CGOGN1_ALGO_LIB NAMES algo HINTS ${CGOGN1_PATH}/lib/${CMAKE_BUILD_TYPE})
-	find_library(CGOGN1_CONTAINER_LIB NAMES container HINTS ${CGOGN1_PATH}/lib/${CMAKE_BUILD_TYPE})
-	find_library(CGOGN1_TOPO_LIB NAMES topology HINTS ${CGOGN1_PATH}/lib/${CMAKE_BUILD_TYPE})
-	find_library(CGOGN1_UTILS_LIB NAMES utils HINTS ${CGOGN1_PATH}/lib/${CMAKE_BUILD_TYPE})
-	set(CGOGN1_LIBRARIES ${CGOGN1_ALGO_LIB} ${CGOGN1_CONTAINER_LIB} ${CGOGN1_TOPO_LIB} ${CGOGN1_UTILS_LIB})
+#	set(CGOGN1_INCLUDE_DIRS ${CGOGN1_PATH}/CGoGN/include ${CGOGN1_PATH}/ThirdParty ${CGOGN1_PATH}/ThirdParty/TinyXml2)
+#	list(APPEND CPP_FILES cgogn1/cgogn1_performance.cpp)
+#	list(APPEND HEADER_FILES cgogn1/cgogn1_performance.h)
+#	find_library(CGOGN1_ALGO_LIB NAMES algo HINTS ${CGOGN1_PATH}/lib/${CMAKE_BUILD_TYPE})
+#	find_library(CGOGN1_CONTAINER_LIB NAMES container HINTS ${CGOGN1_PATH}/lib/${CMAKE_BUILD_TYPE})
+#	find_library(CGOGN1_TOPO_LIB NAMES topology HINTS ${CGOGN1_PATH}/lib/${CMAKE_BUILD_TYPE})
+#	find_library(CGOGN1_UTILS_LIB NAMES utils HINTS ${CGOGN1_PATH}/lib/${CMAKE_BUILD_TYPE})
+#	set(CGOGN1_LIBRARIES ${CGOGN1_ALGO_LIB} ${CGOGN1_CONTAINER_LIB} ${CGOGN1_TOPO_LIB} ${CGOGN1_UTILS_LIB})
 endif()
 
 set(CGAL_DONT_OVERRIDE_CMAKE_FLAGS TRUE CACHE BOOL "preserve cmake flags" FORCE)
-find_package(CGAL)
+#find_package(CGAL)
 if(CGAL_FOUND)
 	include(${CGAL_USE_FILE})
 	list(APPEND HEADER_FILES cgal/lcc_performance_2.h)
@@ -34,15 +34,15 @@ if(CGAL_FOUND)
 endif()
 
 
-find_package(OpenMesh)
+#find_package(OpenMesh)
 if(OPENMESH_FOUND)
 	list(APPEND HEADER_FILES openmesh/openmesh_performance.h)
 	list(APPEND CPP_FILES openmesh/openmesh_performance.cpp)
 endif()
 
-add_subdirectory(surface_mesh/surface_mesh)
+#add_subdirectory(surface_mesh/surface_mesh)
 list(APPEND CPP_FILES performance.cpp)
-list(APPEND CPP_FILES surface_mesh/surface_mesh_performance.cpp)
+#list(APPEND CPP_FILES surface_mesh/surface_mesh_performance.cpp)
 list(APPEND CPP_FILES cgogn2/cgogn2_performance.cpp)
 list(APPEND HEADER_FILES performance.h)
 list(APPEND HEADER_FILES cgogn2/cgogn2_performance.h)
@@ -56,13 +56,13 @@ target_include_directories(${PROJECT_NAME} PRIVATE
 
 target_link_libraries(${PROJECT_NAME}
 			${cgogn_core_LIBRARIES} ${cgogn_io_LIBRARIES} ${cgogn_geometry_LIBRARIES} ${cgogn_modeling_LIBRARIES}
-			surface_mesh
+#			surface_mesh
 			${benchmark_LIBRARIES}
 			)
 
 if (CGOGN1_PATH)
-	target_link_libraries(${PROJECT_NAME} ${CGOGN1_LIBRARIES})
-	target_include_directories(${PROJECT_NAME} PRIVATE ${CGOGN1_INCLUDE_DIRS})
+#	target_link_libraries(${PROJECT_NAME} ${CGOGN1_LIBRARIES})
+#	target_include_directories(${PROJECT_NAME} PRIVATE ${CGOGN1_INCLUDE_DIRS})
 endif()
 
 if(CGAL_FOUND)
diff --git a/benchmarks/comparison/map2/cgogn2/cgogn2_performance.cpp b/benchmarks/comparison/map2/cgogn2/cgogn2_performance.cpp
index 8b30f0b9..8560afd8 100644
--- a/benchmarks/comparison/map2/cgogn2/cgogn2_performance.cpp
+++ b/benchmarks/comparison/map2/cgogn2/cgogn2_performance.cpp
@@ -35,7 +35,10 @@ void Performance2_CGoGN2::clear_mesh()
 	position = Map::VertexAttribute<Vec3>();
 	normalV = Map::VertexAttribute<Vec3>();
 	normalF = Map::FaceAttribute<Vec3>();
-	map = cgogn::make_unique<Map>();
+	if (map)
+		map->clear_and_remove_attributes();
+	else
+		map = cgogn::make_unique<Map>();
 }
 
 bool Performance2_CGoGN2::read_mesh(const std::string& filename)
@@ -151,7 +154,7 @@ BENCHMARK_F(Performance2_CGoGN2, subdivision)(benchmark::State& state)
 		this->SetUp();
 		Map::VertexAttribute<Vec3> new_position = map->add_attribute<Vec3,Vertex>("new_position");
 		state.ResumeTiming();
-
+		cgogn::AutoTimer test("test");
 		//compute new positions of old vertices
 
 		map->foreach_cell([&](Vertex v/*, cgogn::uint32*/)
diff --git a/cgogn/core/basic/cell_marker.h b/cgogn/core/basic/cell_marker.h
index 4814f3ba..4d05755f 100644
--- a/cgogn/core/basic/cell_marker.h
+++ b/cgogn/core/basic/cell_marker.h
@@ -52,13 +52,6 @@ public:
 
 	CGOGN_NOT_COPYABLE_NOR_MOVABLE(CellMarker_T);
 
-	CellMarker_T(Map& map) :
-		map_(map)
-	{
-		mark_attribute_ = map_.template mark_attribute<ORBIT>();
-		mark_attribute_->add_external_ref(reinterpret_cast<ChunkArrayGen**>(&mark_attribute_));
-	}
-
 	CellMarker_T(const MAP& map) :
 		map_(const_cast<MAP&>(map))
 	{
@@ -114,10 +107,6 @@ public:
 
 	CGOGN_NOT_COPYABLE_NOR_MOVABLE(CellMarker);
 
-	inline CellMarker(Map& map) :
-		Inherit(map)
-	{}
-
 	inline CellMarker(const MAP& map) :
 		Inherit(map)
 	{}
@@ -210,10 +199,6 @@ public:
 	using Self = CellMarker< MAP, ORBIT >;
 	using Map = typename Inherit::Map;
 
-	inline CellMarkerNoUnmark(Map& map) :
-		Inherit(map)
-	{}
-
 	inline CellMarkerNoUnmark(const MAP& map) :
 		Inherit(map)
 	{}
diff --git a/cgogn/core/cmap/map_base.h b/cgogn/core/cmap/map_base.h
index 09a8aa76..9d2ac919 100644
--- a/cgogn/core/cmap/map_base.h
+++ b/cgogn/core/cmap/map_base.h
@@ -109,12 +109,12 @@ public:
 	 */
 	inline void clear_and_remove_attributes()
 	{
-		this->topology_.remove_marker_attributes();
+//		this->topology_.remove_marker_attributes();
 		this->topology_.clear_chunk_arrays();
 
-		boundary_marker_ = topology_.add_marker_attribute();
-		for (auto& mark_att_topo : this->mark_attributes_topology_)
-			mark_att_topo.clear();
+//		boundary_marker_ = topology_.add_marker_attribute();
+//		for (auto& mark_att_topo : this->mark_attributes_topology_)
+//			mark_att_topo.clear();
 
 		for (auto& att : this->attributes_)
 			att.remove_chunk_arrays();
@@ -127,8 +127,13 @@ public:
 				this->embeddings_[i] = nullptr;
 			}
 
-			for (auto& mark_attr : this->mark_attributes_[i])
-				mark_attr.clear();
+			{
+				std::lock_guard<std::mutex> lock(this->mark_attributes_mutex_[i]);
+				std::vector<std::vector<ChunkArrayBool*>>& mark_attributes = this->mark_attributes_[i];
+				for (std::vector<ChunkArrayBool*>& ca_vec : mark_attributes)
+					for(ChunkArrayBool* cab : ca_vec)
+						cab->clear();
+			}
 		}
 	}
 
@@ -376,7 +381,9 @@ protected:
 	{
 		static_assert(ORBIT < NB_ORBITS, "Unknown orbit parameter");
 
-		std::size_t thread = this->current_thread_index();
+		const std::size_t thread = this->current_thread_index();
+		cgogn_assert(thread < mark_attributes_[ORBIT].size());
+
 		if (!this->mark_attributes_[ORBIT][thread].empty())
 		{
 			ChunkArrayBool* ca = this->mark_attributes_[ORBIT][thread].back();
@@ -402,6 +409,7 @@ protected:
 	{
 		static_assert(ORBIT < NB_ORBITS, "Unknown orbit parameter");
 		cgogn_message_assert(this->template is_embedded<ORBIT>(), "Invalid parameter: orbit not embedded");
+		cgogn_assert(this->current_thread_index() < mark_attributes_[ORBIT].size());
 
 		this->mark_attributes_[ORBIT][this->current_thread_index()].push_back(ca);
 	}
diff --git a/cgogn/core/cmap/map_base_data.h b/cgogn/core/cmap/map_base_data.h
index 843deb92..44bdbf8e 100644
--- a/cgogn/core/cmap/map_base_data.h
+++ b/cgogn/core/cmap/map_base_data.h
@@ -168,7 +168,8 @@ protected:
 	*/
 	inline ChunkArrayBool* topology_mark_attribute()
 	{
-		std::size_t thread = this->current_thread_index();
+		const std::size_t thread = this->current_thread_index();
+		cgogn_assert(thread < mark_attributes_topology_.size());
 		if (!this->mark_attributes_topology_[thread].empty())
 		{
 			ChunkArrayBool* ca = this->mark_attributes_topology_[thread].back();
@@ -189,7 +190,8 @@ protected:
 	*/
 	inline void release_topology_mark_attribute(ChunkArrayBool* ca)
 	{
-		std::size_t thread = this->current_thread_index();
+		const std::size_t thread = this->current_thread_index();
+		cgogn_assert(thread < mark_attributes_topology_.size());
 		this->mark_attributes_topology_[thread].push_back(ca);
 	}
 
diff --git a/cgogn/core/container/chunk_array_container.h b/cgogn/core/container/chunk_array_container.h
index 498462fe..db248160 100644
--- a/cgogn/core/container/chunk_array_container.h
+++ b/cgogn/core/container/chunk_array_container.h
@@ -582,17 +582,17 @@ public:
 		table_arrays_.clear();
 		names_.clear();
 		type_names_.clear();
-		this->remove_marker_attributes();
+//		this->remove_marker_attributes();
 	}
 
 	void remove_marker_attributes()
 	{
-		for (ChunkArrayBool* cab : table_marker_arrays_)
-			{
-				cab->invalidate_external_refs();
-				delete cab;
-			}
-		table_marker_arrays_.clear();
+//		for (ChunkArrayBool* cab : table_marker_arrays_)
+//			{
+//				cab->invalidate_external_refs();
+//				delete cab;
+//			}
+//		table_marker_arrays_.clear();
 
 	}
 
